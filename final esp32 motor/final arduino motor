const int pwm1 = 51;   // Motor 1 PWM
const int dir1 = 53;   // Motor 1 DIR
const int pwm2 = 47;  // Motor 2 PWM
const int dir2 = 49;  // Motor 2 DIR

// Motor Driver 2 Pins
const int pwm3 = 27;   // Motor 3 PWM
const int dir3 = 25;   // Motor 3 DIR
const int pwm4 = 31;   // Motor 4 PWM
const int dir4 = 29;   // Motor 4 DIR

const int pwm5 = 3;   // Motor 3 PWM
const int dir5 = 2;   // Motor 3 DIR
const int pwm6 = 5;   // Motor 4 PWM
const int dir6 = 4;   // Motor 4 DIR

const int pwm7 = 13; //for pump1
const int pwm8 = 12;//for pump2

void setup() {
  Serial.begin(115200);  // Initialize Serial for debugging
  Serial2.begin(115200);  // Initialize Serial2 for communication with ESP32
}

void loop() {
  if (Serial2.available() > 0) {  // Check if data is available
    String ch = Serial2.readStringUntil('\n');
    ch.trim();  // Read data until newline  // Print received data to Serial Monitor
    if(ch == "L1"){
      motionMode();
    }
    if(ch == "R1"){
      pumpMode();
    }
  }
}



void forward(){
  Serial.println("MOVING FORWARD");
      digitalWrite(dir1, HIGH); // Forward direction
      analogWrite(pwm1, 255);
    

    // Control Motor 2
      digitalWrite(dir2, HIGH); // Forward direction
      analogWrite(pwm2, 255);

      digitalWrite(dir3, HIGH); // Forward direction
      analogWrite(pwm3, 255);

      digitalWrite(dir4, HIGH); // Forward direction
      analogWrite(pwm4, 255);

      digitalWrite(dir5, HIGH); // Forward direction
      analogWrite(pwm5, 255);

      digitalWrite(dir6, HIGH); // Forward direction
      analogWrite(pwm6, 255);
}

void backward(){
  Serial.println("MOVING BACKWARD");
  digitalWrite(dir1, LOW); // Forward direction
      analogWrite(pwm1, -255);
    

    // Control Motor 2
      digitalWrite(dir2, LOW); // Forward direction
      analogWrite(pwm2, -255);

      digitalWrite(dir3, LOW); // Forward direction
      analogWrite(pwm3, -255);

      digitalWrite(dir4, LOW); // Forward direction
      analogWrite(pwm4, -255);

      digitalWrite(dir5, LOW); // Forward direction
      analogWrite(pwm5, -255);

      digitalWrite(dir6, LOW); // Forward direction
      analogWrite(pwm6, -255);
}

void left(){

      Serial.println("TURNING LEFT");
      digitalWrite(dir1, HIGH); // Forward direction
      analogWrite(pwm1, 255);
    

    // Control Motor 2
      digitalWrite(dir2, LOW); // Forward direction
      analogWrite(pwm2, 0);

      digitalWrite(dir3, HIGH); // Forward direction
      analogWrite(pwm3, 255);

      digitalWrite(dir4, LOW); // Forward direction
      analogWrite(pwm4, 0);

      digitalWrite(dir5, HIGH); // Forward direction
      analogWrite(pwm5, 255);

      digitalWrite(dir6, LOW); // Forward direction
      analogWrite(pwm6, 0);

}

void right(){
  Serial.println("TURNING RIGHT");
      digitalWrite(dir1, LOW); // Forward direction
      analogWrite(pwm1, 0);
    

    // Control Motor 2
      digitalWrite(dir2, HIGH); // Forward direction
      analogWrite(pwm2, 255);

      digitalWrite(dir3, HIGH); // Forward direction
      analogWrite(pwm3, 255);

      digitalWrite(dir4, LOW); // Forward direction
      analogWrite(pwm4, 0);

      digitalWrite(dir5, HIGH); // Forward direction
      analogWrite(pwm5, 255);

      digitalWrite(dir6, LOW); // Forward direction
      analogWrite(pwm6, 0);

}

void stopmotors(){
      Serial.println("MOTORS STOP");
      digitalWrite(dir1, HIGH); // Forward direction
      analogWrite(pwm1, 0);
    

    // Control Motor 2
      digitalWrite(dir2, HIGH); // Forward direction
      analogWrite(pwm2, 0);

      digitalWrite(dir3, HIGH); // Forward direction
      analogWrite(pwm3, 0);

      digitalWrite(dir4, HIGH); // Forward direction
      analogWrite(pwm4, 0);

      digitalWrite(dir5, HIGH); // Forward direction
      analogWrite(pwm5, 0);

      digitalWrite(dir6, HIGH); // Forward direction
      analogWrite(pwm6, 0);
}
void leftpump(){
  Serial.println("SUCKING LEFT");
  analogWrite(pwm7, 255);
}

void rightpump(){
  Serial.println("SUCKING RIGHT");
  analogWrite(pwm8, 255);
}

void pumpstop(){
  Serial.println("STOP SUCKING");
  analogWrite(pwm7, 0);
  analogWrite(pwm8, 0);
}





 void motionMode(){
  for(;;){
    if (Serial2.available() > 0) {  // Check if data is available
    String ch = Serial2.readStringUntil('\n');
    ch.trim();
    if(ch == "L1") break;
    if(ch == "FORWARD") forward();
    if(ch == "BACKWARD") backward();
    if(ch == "LEFT") left();
    if(ch == "RIGHT") right();
    if(ch == "STOP") stopmotors();
    }
  }
}

void pumpMode(){
  for(;;){
    if (Serial2.available() > 0) {  // Check if data is available
    String ch = Serial2.readStringUntil('\n');
    ch.trim();
    if(ch == "R1") break;
    if(ch == "FORWARD") Serial.println("LEFT PUMP SUCKING");
    if(ch == "LEFTPUMP") Serial.println("RIGHT PUMP SUCKING");
    if(ch == "STOP") Serial.println("STOPPED SUCKING");
  }
}
}
